//package Ex07.공부;
//
//public class Constructor {
//    생성자에 대한 설명을 좀 더 자세히 풀어볼게요.
//
//            생성자란?
//    생성자는 객체가 생성될 때 자동으로 호출되는 특수한 메서드입니다. 객체의 초기화 작업을 담당합니다. 즉, 객체가 메모리에 할당될 때, 그 객체를 사용할 준비를 마치는 데 필요한 설정을 하는 곳입니다.
//
//            생성자의 역할
//    초기화 작업: 객체가 생성될 때, 객체의 속성(변수)들을 초기값으로 설정하거나, 객체를 사용하는 데 필요한 초기 작업을 수행합니다.
//    자동 호출: 객체가 생성될 때 생성자가 자동으로 호출되어, 별도로 생성자를 호출하지 않아도 객체가 생성될 때 기본적으로 실행됩니다.
//    예시 코드
//    다음은 생성자의 기본적인 사용 예시입니다.
//
//            java
//    코드 복사
//    class Car {
//        String color;
//        int speed;
//
//        // 생성자
//        Car(String color, int speed) {
//            this.color = color;  // 색상 초기화
//            this.speed = speed;  // 속도 초기화
//        }
//    }
//
//    public class Main {
//        public static void main(String[] args) {
//            // Car 객체 생성
//            Car myCar = new Car("Red", 100);
//
//            // 생성자 호출이 자동으로 이루어짐
//            System.out.println("Car color: " + myCar.color);
//            System.out.println("Car speed: " + myCar.speed);
//        }
//    }
//    어떻게 자동으로 호출되나?
//    메인 메서드에서 객체 생성: Car myCar = new Car("Red", 100); 이 코드는 Car 클래스의 생성자를 호출하여 새로운 Car 객체를 생성합니다.
//            new Car("Red", 100)이 실행되면, Car 클래스의 생성자 Car(String color, int speed)가 자동으로 호출됩니다.
//    이 생성자는 color와 speed를 초기화합니다.
//    자동 호출의 의미는, 생성자를 호출하는 것이 new Car(...) 구문에 포함되어 있어서, 객체가 생성되는 시점에 자동으로 생성자가 실행된다는 것입니다. 즉, new 키워드를 사용하여 객체를 생성하면, 해당 클래스의 생성자가 자동으로 호출되어 객체의 속성을 설정합니다.
//            요약
//    생성자는 객체가 생성될 때 자동으로 호출되며, 객체의 속성 초기화 등의 작업을 합니다.
//    메인 메서드에서 객체를 생성할 때, new 키워드를 사용하면 자동으로 생성자가 호출되어 객체의 초기화가 완료됩니다.
//    자동 호출이란, 객체 생성과 동시에 생성자가 실행되어 객체의 준비가 완료된다는 것을 의미합니다.
//}
